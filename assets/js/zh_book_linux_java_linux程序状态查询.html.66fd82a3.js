"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[593],{6262:(a,s)=>{s.A=(a,s)=>{const i=a.__vccOpts||a;for(const[a,e]of s)i[a]=e;return i}},1374:(a,s,i)=>{i.r(s),i.d(s,{comp:()=>l,data:()=>t});var e=i(641);const n={},l=(0,i(6262).A)(n,[["render",function(a,s){return(0,e.uX)(),(0,e.CE)("div",null,s[0]||(s[0]=[(0,e.Fv)('<h1 id="linux-java-程序排查脚本" tabindex="-1"><a class="header-anchor" href="#linux-java-程序排查脚本"><span>linux java 程序排查脚本</span></a></h1><h2 id="top命令-实用" tabindex="-1"><a class="header-anchor" href="#top命令-实用"><span>Top命令（实用）</span></a></h2><h3 id="查看java-程序使用内存与cpu情况-实用" tabindex="-1"><a class="header-anchor" href="#查看java-程序使用内存与cpu情况-实用"><span>查看java 程序使用内存与cpu情况（实用）</span></a></h3><p>语句一：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>top -o %MEM -b -n 1 | grep java | awk &#39;{print &quot;PID: &quot;$1&quot; \\t 虚拟内存: &quot;$5&quot; \\t 物理内存: &quot;$6&quot; \\t 共享内存: &quot;$7&quot; \\t CPU使用率: &quot;$9&quot;% \\t 内存使用率: &quot;$10&quot;%&quot;}&#39;</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>ps -ef|grep java</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>jps</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>结果：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>PID: 6252 \t 虚拟内存: 14.2g \t 物理内存: 2.9g \t 共享内存: 26768 \t CPU使用率: 0.0% \t 内存使用率: 18.7%</span></span>\n<span class="line"><span>PID: 31363 \t 虚拟内存: 5767456 \t 物理内存: 467604 \t 共享内存: 13700 \t CPU使用率: 0.0% \t 内存使用率: 2.9%</span></span>\n<span class="line"><span>PID: 1259 \t 虚拟内存: 6987256 \t 物理内存: 126180 \t 共享内存: 3600 \t CPU使用率: 0.0% \t 内存使用率: 0.8%</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="查询最高消耗程序" tabindex="-1"><a class="header-anchor" href="#查询最高消耗程序"><span>查询最高消耗程序</span></a></h3><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>top -Hp &lt;pid&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="lsof命令" tabindex="-1"><a class="header-anchor" href="#lsof命令"><span>lsof命令</span></a></h2><h3 id="通过pid查询java程序路径" tabindex="-1"><a class="header-anchor" href="#通过pid查询java程序路径"><span>通过pid查询java程序路径</span></a></h3><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>lsof -p 24238 | grep cwd</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>结果：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>java    24238 dxxuser  cwd       DIR              253,3      4096  5636099 /usr/local/app/gdcredit2/gdcredit_web</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="jstat命令-实用-查看gc情况" tabindex="-1"><a class="header-anchor" href="#jstat命令-实用-查看gc情况"><span>jstat命令(实用)-查看gc情况</span></a></h2><h3 id="通过pid查询java程序gcutil情况-实用" tabindex="-1"><a class="header-anchor" href="#通过pid查询java程序gcutil情况-实用"><span>通过pid查询java程序gcutil情况（实用）</span></a></h3><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>jstat -gcutil &lt;pid&gt; &lt;interval&gt; &lt;count&gt;</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>其中，pid是Java进程的进程号，interval是采样间隔时间（单位为毫秒），count是采样次数</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>jstat -gcutil 7783 1000 100</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>字段说明：</p><ul><li><code>S0</code>: 年轻代中第一个Survivor区的使用比例（百分比）。</li><li><code>S1</code>: 年轻代中第二个Survivor区的使用比例（百分比）。</li><li><code>E</code>: 年轻代中Eden区的使用比例（百分比）。</li><li><code>O</code>: Old代（或称Tenured代）的使用比例（百分比）。</li><li><code>M</code>: 方法区（或称Metaspace）的使用比例（百分比）。</li><li><code>CCS</code>表示压缩类空间的使用率（百分比）</li><li><code>YGC</code>: <strong>年轻代垃圾回收的次数</strong>。</li><li><code>YGCT</code>: 年轻代垃圾回收所花费的时间（秒）。</li><li><code>FGC</code>: <strong>Full GC的次数。</strong></li><li><code>FGCT</code>: Full GC所花费的时间（秒）。</li><li><code>GCT</code>: 所有垃圾回收所花费的总时间（秒）。</li></ul><p>结果：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>  S0     S1     E      O      M     CCS    YGC     YGCT    FGC    FGCT     GCT   </span></span>\n<span class="line"><span>  0.00  15.22  37.81  10.41  95.50  92.32   1261  178.936    39   56.249  235.185</span></span>\n<span class="line"><span>  0.00  15.22  37.81  10.41  95.50  92.32   1261  178.936    39   56.249  235.185</span></span>\n<span class="line"><span>  0.00  15.22  37.81  10.41  95.50  92.32   1261  178.936    39   56.249  235.185</span></span>\n<span class="line"><span>  0.00  15.22  37.81  10.41  95.50  92.32   1261  178.936    39   56.249  235.185</span></span>\n<span class="line"><span>  0.00  15.22  37.81  10.41  95.50  92.32   1261  178.936    39   56.249  235.185</span></span>\n<span class="line"><span>  0.00  15.22  37.81  10.41  95.50  92.32   1261  178.936    39   56.249  235.185</span></span>\n<span class="line"><span>  0.00  15.22  37.82  10.41  95.50  92.32   1261  178.936    39   56.249  235.185</span></span>\n<span class="line"><span>  0.00  15.22  37.82  10.41  95.50  92.32   1261  178.936    39   56.249  235.185</span></span>\n<span class="line"><span>  0.00  15.22  37.82  10.41  95.50  92.32   1261  178.936    39   56.249  235.185</span></span>\n<span class="line"><span>  0.00  15.22  37.82  10.41  95.50  92.32   1261  178.936    39   56.249  235.185</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="通过pid查询java程序gc情况" tabindex="-1"><a class="header-anchor" href="#通过pid查询java程序gc情况"><span>通过pid查询java程序gc情况</span></a></h3><p>命令：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>jstat -gc 6252 1000 10</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>字段说明：</p><ul><li><code>S0C</code>：年轻代中第一个Survivor区的大小（字节）。</li><li><code>S1C</code>：年轻代中第二个Survivor区的大小（字节）。</li><li><code>S0U</code>：年轻代中第一个Survivor区已使用的大小（字节）。</li><li><code>S1U</code>：年轻代中第二个Survivor区已使用的大小（字节）。</li><li><code>EC</code>：年轻代中Eden区的大小（字节）。</li><li><code>EU</code>：年轻代中Eden区已使用的大小（字节）。</li><li><code>OC</code>：Old代（或称Tenured代）的大小（字节）。</li><li><code>OU</code>：Old代已使用的大小（字节）。</li><li><code>MC</code>：方法区（或称Metaspace）的大小（字节）。</li><li><code>MU</code>：方法区已使用的大小（字节）。</li><li><code>CCSC</code>：压缩类空间的大小（字节）。</li><li><code>CCSU</code>：压缩类空间已使用的大小（字节）。</li><li><code>YGC</code>：年轻代GC次数。</li><li><code>YGCT</code>：年轻代GC耗时。</li><li><code>FGC</code>：Full GC次数。</li><li><code>FGCT</code>：Full GC耗时。</li><li><code>GCT</code>：GC总耗时。</li></ul><p>结果:</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span> S0C    S1C    S0U    S1U      EC       EU        OC         OU       MC     MU    CCSC   CCSU   YGC     YGCT    FGC    FGCT     GCT   </span></span>\n<span class="line"><span>3072.0 2560.0  0.0   1759.7 256512.0 169920.8 10223616.0 2181406.6  145280.0 137534.4 16256.0 14795.7  10293   74.639   8     24.231   98.870</span></span>\n<span class="line"><span>3072.0 2560.0  0.0   1759.7 256512.0 169922.9 10223616.0 2181406.6  145280.0 137534.4 16256.0 14795.7  10293   74.639   8     24.231   98.870</span></span>\n<span class="line"><span>3072.0 2560.0  0.0   1759.7 256512.0 169924.9 10223616.0 2181406.6  145280.0 137534.4 16256.0 14795.7  10293   74.639   8     24.231   98.870</span></span>\n<span class="line"><span>3072.0 2560.0  0.0   1759.7 256512.0 170090.4 10223616.0 2181406.6  145280.0 137534.4 16256.0 14795.7  10293   74.639   8     24.231   98.870</span></span>\n<span class="line"><span>3072.0 2560.0  0.0   1759.7 256512.0 170090.4 10223616.0 2181406.6  145280.0 137534.4 16256.0 14795.7  10293   74.639   8     24.231   98.870</span></span>\n<span class="line"><span>3072.0 2560.0  0.0   1759.7 256512.0 170090.4 10223616.0 2181406.6  145280.0 137534.4 16256.0 14795.7  10293   74.639   8     24.231   98.870</span></span>\n<span class="line"><span>3072.0 2560.0  0.0   1759.7 256512.0 170090.4 10223616.0 2181406.6  145280.0 137534.4 16256.0 14795.7  10293   74.639   8     24.231   98.870</span></span>\n<span class="line"><span>3072.0 2560.0  0.0   1759.7 256512.0 170090.4 10223616.0 2181406.6  145280.0 137534.4 16256.0 14795.7  10293   74.639   8     24.231   98.870</span></span>\n<span class="line"><span>3072.0 2560.0  0.0   1759.7 256512.0 170255.9 10223616.0 2181406.6  145280.0 137534.4 16256.0 14795.7  10293   74.639   8     24.231   98.870</span></span>\n<span class="line"><span>3072.0 2560.0  0.0   1759.7 256512.0 170255.9 10223616.0 2181406.6  145280.0 137534.4 16256.0 14795.7  10293   74.639   8     24.231   98.870</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="jstack命令-实用-查看线程情况" tabindex="-1"><a class="header-anchor" href="#jstack命令-实用-查看线程情况"><span>jstack命令(实用)-查看线程情况</span></a></h2><p><code>jstack</code>命令是Java JDK中的一个工具，用于生成Java进程的线程快照。它可以帮助我们了解Java进程中各个线程的状态、堆栈信息，以及锁的情况，通常用于分析Java应用程序的性能问题和死锁情况。</p><h3 id="通过pid将java程序的线程快照写入文件内-实用" tabindex="-1"><a class="header-anchor" href="#通过pid将java程序的线程快照写入文件内-实用"><span>通过pid将java程序的线程快照写入文件内 (实用)</span></a></h3><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>jstack pid &gt;&gt; pid-stack.txt</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>jstack 16845 &gt;&gt; 16845-stack.txt</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>jstack -l 22694 &gt;&gt; 22694-stack.txt </span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>//其中，-l参数表示打印关于锁的附加信息。执行该命令后，jstack会打印出每个线程的堆栈信息，并在每个线程的堆栈信息下方打印出该线程持有的锁和等待的锁的信息</span></span>\n<span class="line"><span>jstack -l pid &gt;&gt; pid-stack.txt </span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>//可以将jstack的输出通过管道发送给grep命令进行关键词过滤，从而只显示包含特定关键词的线程堆栈信息。</span></span>\n<span class="line"><span>jstack &lt;pid&gt; | grep &quot;关键词&quot;  &gt;&gt; pid-stack.txt</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="jmap命令-实用-查看内存情况" tabindex="-1"><a class="header-anchor" href="#jmap命令-实用-查看内存情况"><span>jmap命令（实用）-查看内存情况</span></a></h2><h3 id="生成java进程的堆转储快照-heap-dump-生产不建议使用" tabindex="-1"><a class="header-anchor" href="#生成java进程的堆转储快照-heap-dump-生产不建议使用"><span>生成Java进程的堆转储快照（heap dump）（生产不建议使用）</span></a></h3><p><strong>注意：生产dump文件太大，本机无法使用</strong></p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>jmap -dump:format=b,file=heap_dump.bin &lt;pid&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>这条命令会生成一个Java堆的转储快照，保存为<code>heap_dump.bin</code>文件。这个堆转储文件可以用于后续的内存分析和调试。</p><h3 id="查看java堆中对象实例的统计信息-实用" tabindex="-1"><a class="header-anchor" href="#查看java堆中对象实例的统计信息-实用"><span>查看Java堆中对象实例的统计信息（实用）</span></a></h3><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>jmap -histo &lt;pid&gt; &gt;&gt; pid-object.txt</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>jmap -histo 7783 &gt;&gt; 7783-object.txt</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这条命令会打印出Java堆中各个类的对象实例数量和占用内存大小，有助于分析Java进程中的内存使用情况。</p><p>结合 <code>&gt;&gt;</code>将文件写入文件内</p><h3 id="查看java堆中指定对象实例的详细信息" tabindex="-1"><a class="header-anchor" href="#查看java堆中指定对象实例的详细信息"><span>查看Java堆中指定对象实例的详细信息</span></a></h3><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>jmap -dump:format=b,file=heap_dump.bin &lt;pid&gt; &lt;object_id&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>可以使用<code>jmap</code>命令生成堆转储文件，并通过指定对象实例的ID来查看该对象实例的详细信息。</p><h3 id="查看java进程的共享对象映射" tabindex="-1"><a class="header-anchor" href="#查看java进程的共享对象映射"><span>查看Java进程的共享对象映射</span></a></h3><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>jmap -clstats &lt;pid&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>结果：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>Class Loader                              Classes Bytes   Parent Class Loader</span></span>\n<span class="line"><span>sun.misc.Launcher$AppClassLoader@70dea4e  1232    34423680 sun.misc.Launcher$ExtClassLoader@15db9742</span></span>\n<span class="line"><span>sun.misc.Launcher$ExtClassLoader@15db9742 1486    68628264 null</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上面的输出中，第一列是类加载器的名称，第二列是该类加载器所加载的类的数量，第三列是该类加载器加载的类占用的内存大小，第四列是该类加载器的父类加载器。</p><p>通过<code>jmap -clstats</code>命令，我们可以方便地查看Java进程中各个类加载器加载的类的数量、大小和层次关系，有助于定位可能的内存泄漏或类加载器问题。</p><h2 id="netstat-命令" tabindex="-1"><a class="header-anchor" href="#netstat-命令"><span>netstat 命令</span></a></h2><h3 id="查看所有连接详情" tabindex="-1"><a class="header-anchor" href="#查看所有连接详情"><span>查看所有连接详情</span></a></h3><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>netstat grep &lt;pid&gt;</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>netstat grep 22694</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="查看各个状态情况" tabindex="-1"><a class="header-anchor" href="#查看各个状态情况"><span>查看各个状态情况</span></a></h3><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>netstat -n | awk &#39;/^tcp/ {++State[$NF]} END {for(i in State) print i, State[i]}&#39;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div>',55)]))}]]),t=JSON.parse('{"path":"/zh/book/linux/java_linux%E7%A8%8B%E5%BA%8F%E7%8A%B6%E6%80%81%E6%9F%A5%E8%AF%A2.html","title":"linux java 程序排查脚本","lang":"zh-CN","frontmatter":{"editLink":true,"date":"2024-11-27T00:00:00.000Z","category":["java","linux"],"tag":["java排查","linux排查"],"description":"linux java 程序排查脚本 Top命令（实用） 查看java 程序使用内存与cpu情况（实用） 语句一： 结果： 查询最高消耗程序 lsof命令 通过pid查询java程序路径 结果： jstat命令(实用)-查看gc情况 通过pid查询java程序gcutil情况（实用） 字段说明： S0: 年轻代中第一个Survivor区的使用比例（百分比...","head":[["meta",{"property":"og:url","content":"https://github.com/simpletfh/blog/zh/book/linux/java_linux%E7%A8%8B%E5%BA%8F%E7%8A%B6%E6%80%81%E6%9F%A5%E8%AF%A2.html"}],["meta",{"property":"og:site_name","content":"ToolForge"}],["meta",{"property":"og:title","content":"linux java 程序排查脚本"}],["meta",{"property":"og:description","content":"linux java 程序排查脚本 Top命令（实用） 查看java 程序使用内存与cpu情况（实用） 语句一： 结果： 查询最高消耗程序 lsof命令 通过pid查询java程序路径 结果： jstat命令(实用)-查看gc情况 通过pid查询java程序gcutil情况（实用） 字段说明： S0: 年轻代中第一个Survivor区的使用比例（百分比..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-11-27T03:04:38.000Z"}],["meta",{"property":"article:tag","content":"java排查"}],["meta",{"property":"article:tag","content":"linux排查"}],["meta",{"property":"article:published_time","content":"2024-11-27T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-11-27T03:04:38.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"linux java 程序排查脚本\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-11-27T00:00:00.000Z\\",\\"dateModified\\":\\"2024-11-27T03:04:38.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Tang\\"}]}"]]},"headers":[{"level":2,"title":"Top命令（实用）","slug":"top命令-实用","link":"#top命令-实用","children":[{"level":3,"title":"查看java 程序使用内存与cpu情况（实用）","slug":"查看java-程序使用内存与cpu情况-实用","link":"#查看java-程序使用内存与cpu情况-实用","children":[]},{"level":3,"title":"查询最高消耗程序","slug":"查询最高消耗程序","link":"#查询最高消耗程序","children":[]}]},{"level":2,"title":"lsof命令","slug":"lsof命令","link":"#lsof命令","children":[{"level":3,"title":"通过pid查询java程序路径","slug":"通过pid查询java程序路径","link":"#通过pid查询java程序路径","children":[]}]},{"level":2,"title":"jstat命令(实用)-查看gc情况","slug":"jstat命令-实用-查看gc情况","link":"#jstat命令-实用-查看gc情况","children":[{"level":3,"title":"通过pid查询java程序gcutil情况（实用）","slug":"通过pid查询java程序gcutil情况-实用","link":"#通过pid查询java程序gcutil情况-实用","children":[]},{"level":3,"title":"通过pid查询java程序gc情况","slug":"通过pid查询java程序gc情况","link":"#通过pid查询java程序gc情况","children":[]}]},{"level":2,"title":"jstack命令(实用)-查看线程情况","slug":"jstack命令-实用-查看线程情况","link":"#jstack命令-实用-查看线程情况","children":[{"level":3,"title":"通过pid将java程序的线程快照写入文件内 (实用)","slug":"通过pid将java程序的线程快照写入文件内-实用","link":"#通过pid将java程序的线程快照写入文件内-实用","children":[]}]},{"level":2,"title":"jmap命令（实用）-查看内存情况","slug":"jmap命令-实用-查看内存情况","link":"#jmap命令-实用-查看内存情况","children":[{"level":3,"title":"生成Java进程的堆转储快照（heap dump）（生产不建议使用）","slug":"生成java进程的堆转储快照-heap-dump-生产不建议使用","link":"#生成java进程的堆转储快照-heap-dump-生产不建议使用","children":[]},{"level":3,"title":"查看Java堆中对象实例的统计信息（实用）","slug":"查看java堆中对象实例的统计信息-实用","link":"#查看java堆中对象实例的统计信息-实用","children":[]},{"level":3,"title":"查看Java堆中指定对象实例的详细信息","slug":"查看java堆中指定对象实例的详细信息","link":"#查看java堆中指定对象实例的详细信息","children":[]},{"level":3,"title":"查看Java进程的共享对象映射","slug":"查看java进程的共享对象映射","link":"#查看java进程的共享对象映射","children":[]}]},{"level":2,"title":"netstat 命令","slug":"netstat-命令","link":"#netstat-命令","children":[{"level":3,"title":"查看所有连接详情","slug":"查看所有连接详情","link":"#查看所有连接详情","children":[]},{"level":3,"title":"查看各个状态情况","slug":"查看各个状态情况","link":"#查看各个状态情况","children":[]}]}],"git":{"createdTime":1732675194000,"updatedTime":1732676678000,"contributors":[{"name":"汤逢翰","email":"tangfh@dxxcredit.com","commits":2}]},"readingTime":{"minutes":5.52,"words":1655},"filePathRelative":"zh/book/linux/java_linux程序状态查询.md","localizedDate":"2024年11月27日","excerpt":"\\n<h2>Top命令（实用）</h2>\\n<h3>查看java 程序使用内存与cpu情况（实用）</h3>\\n<p>语句一：</p>\\n<div class=\\"language- line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"\\" data-title=\\"\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code><span class=\\"line\\"><span>top -o %MEM -b -n 1 | grep java | awk \'{print \\"PID: \\"$1\\" \\\\t 虚拟内存: \\"$5\\" \\\\t 物理内存: \\"$6\\" \\\\t 共享内存: \\"$7\\" \\\\t CPU使用率: \\"$9\\"% \\\\t 内存使用率: \\"$10\\"%\\"}\'</span></span>\\n<span class=\\"line\\"><span></span></span>\\n<span class=\\"line\\"><span>ps -ef|grep java</span></span>\\n<span class=\\"line\\"><span></span></span>\\n<span class=\\"line\\"><span>jps</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}')}}]);